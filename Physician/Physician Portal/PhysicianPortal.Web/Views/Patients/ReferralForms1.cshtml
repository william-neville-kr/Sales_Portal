@{
    ViewBag.Title = "Referral Forms";
}
<link href="~/Content/pdfForms.css" rel="stylesheet" />

<input type="hidden" id="ReferralFormId" name="ReferralFormId" />
<input type="hidden" id="ReferralFormName" name="ReferralFormName" />

<fieldset>
    <legend>Referral Forms</legend>
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="col-lg-4 col-md-12 col-sm-12 col-xs-12 padding0 referral-form-grid-width">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding0" style="padding-bottom: 15px;">
                @(Html.Kendo().Grid<PhysicianPortal.Web.Models.ReferralFormViewModel>()
                .Name("gridPatientReferralForms")
                .HtmlAttributes(new { @style = "display:inline-block; width: 100%" })
                .Columns(columns =>
                {
                    columns.Bound(c => c.ReferralFormName).Title("Form");
                    columns.Bound(c => c.FilledBy).Title("Filled By");
                    columns.Bound(c => c.FilledOn).Title("Filled On").Format("{0:MM/dd/yyyy, hh:mm tt}").Width(143);
                    columns.Command(command => command.Custom("Edit").Click("addReferralFormGirdFun").HtmlAttributes(new { @class = "btn-primary btn-grid" })).Title("").HtmlAttributes(new { @class = "text-align-center" }).Width(42);
                    if (User.IsInRole("Pharmacist"))
                    {
                        columns.Command(command => command.Custom("CPR Test").Click("").HtmlAttributes(new { @class = "btn-primary btn-push-to-cpr" })).Title("").HtmlAttributes(new { @class = "text-align-center" }).Width(42);// btn-push-to-cpr
                        columns.Command(command => command.Custom("CPR Prod").Click("").HtmlAttributes(new { @class = "btn-primary btn-push-to-cpr" })).Title("").HtmlAttributes(new { @class = "text-align-center" }).Width(42);// btn-push-to-cpr
                    }
                })
                .Selectable()
                .Sortable()
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetPatientReferralForms", "Patients").Data("patientReferralFormsFun"))
                    .Model(model => model.Id(p => p.ReferralFormId))
                )
                .NoRecords(n => n.Template("No records to display"))
                .Events(e => e.DataBound("onDataBoundPatientReferralForms"))
                )
            </div>
            
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding0" style="padding-bottom: 15px;">
                <div id="btnChecklistSubmit" class="text-align-center hidden" style="padding-bottom: 15px;">
                    <button type="button" onclick="submitReferralForm();" class="btn btn-primary">Submit</button>
                </div>
                @(Html.Kendo().Grid<PhysicianPortal.Core.Data.spPatientChecklist_Result>()
                    .Name("gridChecklist")
                    .HtmlAttributes(new { @style = "display:inline-block; width: 100%" })
                    .Columns(columns =>
                    {
                        columns.Bound(c => c.ChecklistName).Title("Name");
                        columns.Bound(c => c.UploadedByUser).Title("Uploaded By");
                        columns.Bound(c => c.UploadedOn).Title("Uploaded On").Format("{0:MM/dd/yyyy, hh:mm tt}").Width(143);
                        //columns.Bound(c => c.Isuploaded).ClientTemplate("<input type='checkbox' #= Isuploaded ? checked='checked' :'' # />");
                        columns.Command(command => command.Custom("Upload").Click("uploadChecklistFun").Text("<span class=\'glyphicon glyphicon-upload\'></span>").HtmlAttributes(new { @class = "btn-primary btn-grid", style = "min-width: 0; width: auto; font-size: 20px;" })).Title("").HtmlAttributes(new { @class = "text-align-center" }).Width(42);
                    })
                    .Selectable()
                    .Sortable()
                    .DataSource(dataSource => dataSource
                        .Ajax()
                        .Read(read => read.Action("GetChecklists", "Patients").Data("SendPhysicianPortalPatientIdFunc"))
                    )
                    .Events(e => e.DataBound("onDataBoundGridChecklist"))
                    .NoRecords(n => n.Template("No records to display"))
                    .AutoBind(false)
                )
                <div class="text-align-center" style="padding: 15px;">
                    <ul class="list-inline">
                        <li class="alert-danger" style="width: 125px;">Not Completed</li>
                        <li class="alert-success" style="width: 125px;">Completed</li>
                        <li class="alert-info" style="width: 125px;">Not Needed</li>
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-lg-8 col-md-12 col-sm-12 col-xs-12 referral-form-grid-width">
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding: 3px;">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    Select Category
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    @(Html.Kendo().DropDownList()
                        .Name("CategoryList")
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .Events(e => e.Select("onSelectCategoryList").DataBound("onDataBoundCategoryList"))
                        .BindTo(ViewBag.GetReferralFormCategories)
                        .Value("3")
                        .HtmlAttributes(new { style = "width: 100%" })
                    )
                </div>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="padding: 3px;">
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                    Select PDF Form
                </div>
                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12">
                    @(Html.Kendo().DropDownList()
                      .Name("PDFFormList")
                      .DataTextField("Text")
                      .DataValueField("Value")
                      .AutoBind(false)
                      .HtmlAttributes(new { style = "width: 100%;" })
                    )
                </div>
                <button type="button" class="btn btn-primary" onclick="addReferralFormFun(); return false;">Add</button>
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding0" id="divReferralForm"></div>
        </div>
    </div>
</fieldset>

<div id="divUploadDocuments" style="display: none; line-height: 1.42857143;">
    <input type="hidden" id="ReferralFormChecklistRelationshipId" name="ReferralFormChecklistRelationshipId" />
    <div class="checkbox" style="padding: 0;">
        <label><input type="checkbox" id="isNotNeeded" name="isNotNeeded" />Not Needed</label>
    </div>
    <div id="wrapper" class="demo-section k-content"></div>
    <div class="text-align-center" style="border-top: 1px solid #dddddd; padding-top: 10px;">
        <button class="btn btn-primary" onclick="divUploadDocumentsClose();">Ok</button>
    </div>
</div>

<div id="showPDFFormsListKendoWindow" style="display: none;">
    <div id="divDocumentViewer" style="text-align: center; width: 100%; height: 100%;"></div>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        var referralFormId,refformInnerId,physicianPortalPatientId;
        $(".k-dropdown-operator").hide();
    });

    //DataBound of gridPatientReferralForms
    function onDataBoundPatientReferralForms(arg) {
        var dataItem = arg.sender.dataSource.get(getParameterByName("ReferralFormId"));
        if (dataItem != undefined) {
            loadData(dataItem);
        }
    }

    //Load data function change CategoryList and load Checkllists, PDFFormLists and Referral form
    function loadData(dataItem){
        var url = '@Url.Content("~/Patients/")' + dataItem.ReferralFormLink + "?PhysicianPortalPatientId=" + @Model.PhysicianPortalPatientId;
        $("#CategoryList").data("kendoDropDownList").value(dataItem.ReferralFormCategoryId);
        getReferralForms(dataItem.ReferralFormCategoryId);
        reloadChecklistFun(dataItem.ReferralFormId);
        getReferralFormFun(url);
    }

    //Load data using ajax with parameter in gridPatientReferralForms
    function patientReferralFormsFun ()
    {
        return {
            PhysicianPortalPatientId: parseInt("@Model.PatientId")
        }
    }

    //Edit button in gridPatientReferralForms
    //In this function call loadData function
    function addReferralFormGirdFun(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        loadData(dataItem);
    }

    //On Add button clicked get referral form and load it into a div
    function addReferralFormFun() {
        var url = '@Url.Content("~/Patients/")' + $("#PDFFormList").val() + "?PhysicianPortalPatientId=" + @Model.PhysicianPortalPatientId;
        getReferralFormFun(url);
        reloadChecklistFun(undefined, $("#PDFFormList").data("kendoDropDownList").text());
    }

    //Get referral form through ajax call and render resulted html into a div
    function getReferralFormFun(url) {
        $.ajax({
            url: url,
            //cache: false,
            type: "GET",
            dataType: "html",
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, XMLHttpRequest) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                $("#divReferralForm").html(data);

                if($("#IsSignatured").val() == "True")
                {
                    GetSignature(true);
                }

                // Add masking
                $(".dateclass").mask("99/99/9999");
                $(".phoneNumberClass").mask("(999) 999-9999");
                $(".zipClass").mask("99999");

                //Add datepicker
                $(".dateclass").kendoDatePicker({format: "MM/dd/yyyy", min: new Date(1900,0,1,0,0,0,0)});

                $(".patient-prescriber input").attr("readonly", true);
                $(".patient-prescriber input:radio").attr("disabled", true);
            },
            error: function (xhr)
            {
                $("#divReferralForm").html("<div style=\"text-align: center;\"><h4>Pdf not found.</h4></div>");
            }
        });
    }

    //Get Signature through ajax call and then load signature image into signature place
    //Called from child elements. This function is called from partial view
    function GetSignature(flag) {
        var request = JSON.stringify({
            PhysicianId: $("#physicianId").val()
        });
        $.ajax({
            url: '@Url.Action("GetSignature", "Home")',
            type: 'POST',
            data: request,
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, xhr) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success) {
                    $("#imgSignature1").attr("src", "data:image/tiff;base64," + data.message);
                    $("#imgSignature2").attr("src", "data:image/tiff;base64," + data.message);
                    autoDateUpdate("#Date1");
                    autoDateUpdate("#Date2");
                    $("#IsSignatured").val("True");

                    if (!flag) {
                        $.notifyBar({ html: "Your Signature Added Successfully", cssClass: "success", position: "top" });
                    }
                }
                else {
                    console.log("File not found.");
                }
            },
            error: function (xhr, textStatus, errorThrown) {
                alert(errorThrown);
            }
        });
    }

    //Auto add date when user add signature
    function autoDateUpdate(dateTextId) {
        //Getting current date
        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth() + 1;
        var yyyy = today.getFullYear();

        if (dd < 10) {
            dd = '0' + dd
        }

        if (mm < 10) {
            mm = '0' + mm
        }
        today = mm + '/' + dd + '/' + yyyy;

        //Setting current date
        $(dateTextId).val(today);
    }

    function OnSuccessReferralForm(result) {

        if (result.hasOwnProperty("d")) {
            result = result.d;
        }

        if (result.success) {
            referralFormId=result.referralFormId;
            refformInnerId=result.refFormDermatologyId;
            physicianPortalPatientId=result.physicianPortalPatientId;
            $.notifyBar({ html: result.message, cssClass: 'success', position: 'top' });

            // Parent view content
            $("#divReferralForm").html("");
            $(".k-grid").each(function () {
                $(this).data("kendoGrid").dataSource.read();
            });
            getReferralForms($("#CategoryList").val());

            if (shouldPrint === true)
            {
                debugger;
                //send ajax
                var request =
                    {
                        referralFormId:referralFormId,
                        RefFormDermatologyId:refformInnerId,
                        physicianPortalPatientId:physicianPortalPatientId
                    };
                $.ajax({
                    url: '@Url.Action("FillPdfDermatology", "Patients")',
                    type: 'POST',
                    data: JSON.stringify(request),
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    beforeSend: function () {
                        $("#loading-image").show();
                    },
                    success: function (data, textStatus, xhr) {
                        if (data.hasOwnProperty("d")) {
                            data = data.d;
                        }
                        if (data.success)
                        {
                            filenamepdf = '@Url.Action("GetPatientReferralPDF", "Patients")' + '?fileName=' + encodeURIComponent(data.message);

                            var object = "<object data='{FileName}' type='application/pdf' style='width: inherit; height: 100%;'>";
                            object += "If you are unable to view file, you can download from <a href = '{FileName}'>here</a>";
                            object += " or download <a target = '_blank' href = 'http://get.adobe.com/reader/'>Adobe PDF Reader</a> to view the file.";
                            object += "</object>";
                            object = object.replace(/{FileName}/g, filenamepdf);

                            $("#divDocumentViewer").html(object);

                            $("#showPDFFormsListKendoWindow").kendoWindow({
                                modal: true,
                                width: "70%",
                                height: "70%",
                                maxWidth: 800,
                                maxHeight: 600,
                                minWidth: 300,
                                minHeight: 300,
                                overflow: "hidden",
                                title: "PDF Forms",
                                visible: false,
                                actions: ["Close"],
                                resizable: false,
                                draggable: false,
                                open: function (e) {
                                    $("body").css("overflow", "hidden");
                                },
                                close: function (e) {
                                    $("body").css("overflow", "");
                                    $("#divDocumentViewer").html("");
                                }
                            })
                            .data("kendoWindow")
                            .center()
                            .open();
                        }
                        else {
                            console.log("Pdf not fill.");
                        }
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        alert(errorThrown);
                    }
                });
                shouldPrint = false;
            }
        }
        else
        {
            $.notifyBar({ html: result.message, cssClass: 'error', position: 'top' });
        }
    }

    function OnFailureReferralForm(xhr) {
        console.log(xhr);
    }

    function ReferralFormSave() {
        saveReferralForm(false, null);
    }

    function saveReferralForm(printPDF, form) {

        var cardiovascularReferralForm = $(".ReferralForm");
        cardiovascularReferralForm.submit();

        $.ajax({
            url: '@Url.Action("ConvertHTMLToPDF", "Patients")',
            data: {
                HTML: cardiovascularReferralForm[0].outerHTML,
                PhysicianPortalPatientId: $("#PhysicianPortalPatientId11").val(),
                ReferralFormId: $("#ReferralFormId").val(),
                ReferralFormName: $("#ReferralFormName").val(),
                SaveReferralForm:true
            },
            cache: false,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success) {
                    if (printPDF == true){
                        printReferralForm(form);
                    }
                }
                else {
                    console.log("Pdf not fill.");
                }
            },
            error: function (xhr) {
                //console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });

        return false;
        //cardiovascularReferralForm.validate();

        //if (cardiovascularReferralForm.valid()) {
        //    cardiovascularReferralForm.submit();
        //}

    }

    var shouldPrint = false;



    function printButtonPressed(e)
    {
        saveReferralForm(true, e);
    }


    function printReferralForm(e) {

        var form = $(e);

        var formName = e.substring(1)

        $(".dateclass .k-input").each(function () {
            $(this).attr("value", $(this).val());
        });

        //THE FOLLOWING CODE IS TO USE PECHKIN
        $.ajax({
            url: '@Url.Action("ConvertHTMLToPDF", "Patients")',
            data: {
                HTML: form[0].outerHTML,
                PhysicianPortalPatientId: $("#PhysicianPortalPatientId11").val(),
                ReferralFormId: $("#ReferralFormId").val(),
                ReferralFormName: $("#ReferralFormName").val(),
                SaveReferralForm:false
            },
            cache: false,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data) {

                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success)
                {
                    filenamepdf = '@Url.Action("GetPatientReferralPDF", "Patients")' + '?fileName=' + encodeURIComponent(data.message);

                    var object = "<object data='{FileName}' type='application/pdf' style='width: inherit; height: 100%;'>";
                    object += "If you are unable to view file, you can download from <a href = '{FileName}'>here</a>";
                    object += " or download <a target = '_blank' href = 'http://get.adobe.com/reader/'>Adobe PDF Reader</a> to view the file.";
                    object += "</object>";
                    object = object.replace(/{FileName}/g, filenamepdf);

                    $("#divDocumentViewer").html(object);

                    $("#showPDFFormsListKendoWindow").kendoWindow({
                        modal: true,
                        width: "70%",
                        height: "90%",
                        maxWidth: 800,
                        maxHeight: 800,
                        minWidth: 300,
                        minHeight: 300,
                        //modal: true,
                        //width: "70%",
                        //height: "70%",
                        //maxWidth: 800,
                        //maxHeight: 600,
                        //minWidth: 300,
                        //minHeight: 300,
                        title: "PDF Forms",
                        visible: false,
                        actions: ["Close"],
                        resizable: false,
                        draggable: false,
                        open: function (e) {
                            $("body").css("overflow", "hidden");
                        },
                        close: function (e) {
                            $("body").css("overflow", "");
                            $("#divDocumentViewer").html("");
                        }
                    })
                    .data("kendoWindow")
                    .center()
                    .open();
                }
                else {
                    console.log("Pdf not fill.");
                }


            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });



        //THE FOLLOWING CODE IS TO TO DIRECTLY PRINT THE HTML
        //var mywindow = window.open( "", "new div", "" );
        //mywindow.document.write( "<html><head><title></title>" );

        //mywindow.document.write( "<link href=\"../Content/Site.css\" rel=\"stylesheet\" media = \"all\" />" );
        //mywindow.document.write( "<link href=\"../Content/bootstrap.css\" rel=\"stylesheet\" media = \"all\" />" );
        //mywindow.document.write( "<link href=\"../Content/pdfForms.css\" rel=\"stylesheet\" media = \"all\" />" );
        //mywindow.document.write( "<link href=\"../Content/user-customization.css\" rel=\"stylesheet\" media = \"all\" />" );
        //mywindow.document.write( "<link href=\"../Content/kendo/2017.1.118/kendo.bootstrap.min.css\" rel=\"stylesheet\" media = \"all\" />" );
        //mywindow.document.write( "<link href=\"../Content/kendo/2017.1.118/kendo.common.min.css\" rel=\"stylesheet\" media = \"all\" />" );

        //mywindow.document.write( "</head><body >" );
        //mywindow.document.write( form.innerHTML );
        //mywindow.document.write( "</body></html>" );

        ////mywindow.print();
        //setTimeout(function(){mywindow.print();},1000);
        ////mywindow.close();

        //return true;


        //Commenting following code temporarily to test printing functionality above
        //debugger;
        //shouldPrint = true;
        //submitDermatologyForm(e);

    }

    function submitDermatologyForm(e)
    {
        var formId = e.form.id;
        var currentform = $("#" + formId);
        currentform.submit();
    }

    function onSelectCategoryList(e) {
        var dataItem = this.dataItem(e.item.index());
        getReferralForms(dataItem.Value);
    }

    function onDataBoundCategoryList(e) {
        getReferralForms("3");
    }

    function getReferralForms(referralFormCategoryId) {
        $.ajax({
            url: '@Url.Action("GetReferralForms", "Patients")',
            data: { ReferralFormCategoryId: referralFormCategoryId, PatientId: @Model.PatientId },
            cache: false,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success) {
                    var tempArray = [];
                    data.message.forEach(function (item) {
                        tempArray.push({ Text: item.Text, Value: item.Value });
                    });
                    var PDFFormList = $("#PDFFormList").data("kendoDropDownList");
                    PDFFormList.dataSource.data(tempArray);
                    PDFFormList.select(0);
                }
            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    }

    //For Checklist

    var files = [
        { name: "file1.doc", size: 525, extension: ".doc" },
        { name: "file2.jpg", size: 600, extension: ".jpg" },
        { name: "file3.xls", size: 720, extension: ".xls" },
    ];

    function emptyUpload() {
        if ($("#upload").data("kendoUpload") != undefined) {
            $("#upload").data("kendoUpload").destroy();
            $("#wrapper").empty();
        }
    }

    function createUpload() {
        $('<input type="file" name="files" id="upload" />').appendTo("#wrapper").kendoUpload({
            async: {
                saveUrl: "SaveAndPersist",
                removeUrl: "RemoveAndPersist",
                autoUpload: true
            },
            multiple: false,
            files: files,
            upload: onUpload,
            success: onSuccess,
            remove: onRemove,
            select: onSelect
        });
    }

    function onUpload(e) {
        e.data = {
            ReferralFormChecklistRelationshipId: $("#ReferralFormChecklistRelationshipId").val(),
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val()
        };
    }

    function onSuccess(e) {
        reloadChecklistFun();
    }

    function onRemove(e) {
        e.data = {
            ReferralFormChecklistRelationshipId: $("#ReferralFormChecklistRelationshipId").val(),
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val()
        };
    }

    function onSelect(e) {
        if (e.files.length > 1) {
            alert("Please select max 1 files.");
            e.preventDefault();
        }
    }

    function uploadChecklistFun(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $("#ReferralFormChecklistRelationshipId").val(dataItem.ReferralFormChecklistRelationshipId);
        $("#isNotNeeded").prop('checked', dataItem.IsNotNeeded);

        var request = {
            ReferralFormChecklistRelationshipId: dataItem.ReferralFormChecklistRelationshipId,
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val()
        };

        $.ajax({
            url: '@Url.Action("GetUploadChecklistDoc", "Patients")',
            data: request,
            cache: false,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, XMLHttpRequest) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }

                files = [];
                if (data.message.Name != "" && data.message.Extension != "") {
                    files.push({ name: data.message.Name, size: data.message.Size, extension: data.message.Extension });
                }
                emptyUpload();
                createUpload(files);

                $("#divUploadDocuments").kendoWindow({
                    modal: true,
                    //width: "70%",
                    //height: "90%",
                    //maxWidth: 800,
                    //maxHeight: 800,
                    //minWidth: 300,
                    //minHeight: 300,
                    width: "70%",
                    height: "100%",
                    maxWidth: 400,
                    maxHeight: 200,
                    minWidth: 150,
                    minHeight: 150,
                    title: "Upload Documents",
                    visible: false,
                    resizable: false,
                    draggable: false,
                    actions: ["Close"],
                    open: function (e) {
                        $("body").css("overflow", "hidden");
                    },
                    close: function () {
                        $("body").css("overflow", "");
                    },
                    refresh: function () {
                        //The following function resets the poosition of the kendo window on orientation change on tablets and mobiles
                        $("#divUploadDocuments").bind("orientationchange", function (event) {
                            var x = document.activeElement;
                            if (x != undefined && x != null) {
                                x.blur();
                            }
                            $("#divUploadDocuments").data("kendoWindow").center();
                        });
                    },
                    actions: ["Close"]
                })
                .data("kendoWindow")
                .center()
                .open();
            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    }

    function SendPhysicianPortalPatientIdFunc() {
        debugger;

        if($("#PhysicianPortalPatientId").val() == null)
        {
            if(@Model.PhysicianPortalPatientId!="" || @Model.PhysicianPortalPatientId!=null)
                $("#physicianPortalPatientId").val(@Model.PhysicianPortalPatientId);
        }



        return {
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val(),
            ReferralFormName: $("#ReferralFormName").val(),
            ReferralFormId: $("#ReferralFormId").val()
        }
    }

    function onDataBoundGridChecklist(e) {
        var items = e.sender.items();
        items.each(function (index) {
            var dataItem = $("#gridChecklist").data("kendoGrid").dataItem(this);
            //if (dataItem.IsNotNeeded && !dataItem.Isuploaded) {
            //    this.className = this.className.replace("k-alt", "");
            //    this.className += " alert-warning";
            //}
            if (dataItem.IsNotNeeded && !dataItem.Isuploaded) {
                this.className = this.className.replace("k-alt", "");
                this.className += " alert-info";
            }
            if (dataItem.Isuploaded) {
                this.className = this.className.replace("k-alt", "");
                this.className += " alert-success";
            }
            //if (dataItem.IsNotNeeded && dataItem.Isuploaded) {
            //    this.className = this.className.replace("k-alt", "");
            //    this.className += " alert-info";
            //}
            if (!dataItem.IsNotNeeded && !dataItem.Isuploaded) {
                this.className = this.className.replace("k-alt", "");
                this.className += " alert-danger";
            }
        });
    }

    $("#isNotNeeded").change(function() {
        //console.log($(this).prop("checked"));

        var request = {
            IsNotNeeded: $(this).prop("checked"),
            ReferralFormChecklistRelationshipId: $("#ReferralFormChecklistRelationshipId").val(),
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val()
        };

        $.ajax({
            url: '@Url.Action("NotNeededChecklist", "Patients")',
            data: request,
            cache: false,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, XMLHttpRequest) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success) {
                    $.notifyBar({ html: data.message, cssClass: "success", position: "top" });
                    reloadChecklistFun();
                }
                else
                {
                    $.notifyBar({ html: data.message, cssClass: 'error', position: 'top' });
                }
            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    });

    //Get value from query string.
    function getParameterByName(name, url) {
        if (!url) url = window.location.href;
        name = name.replace(/[\[\]]/g, "\\$&");
        var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
            results = regex.exec(url);
        if (!results) return null;
        if (!results[2]) return '';
        return decodeURIComponent(results[2].replace(/\+/g, " "));
    }

    //Reload Checklist grid
    function reloadChecklistFun(ReferralFormId, ReferralFormName){
        if (ReferralFormId != undefined) {
            $("#ReferralFormId").val(ReferralFormId);
        }
        if (ReferralFormName != undefined) {
            $("#ReferralFormId").val("");
            $("#ReferralFormName").val(ReferralFormName);
        }
        $("#gridChecklist").data("kendoGrid").dataSource.read();
        $("#btnChecklistSubmit").removeClass("hidden");
    }

    function POSTReferralFormDATA(e) {

        var selectedChecklist = "";
        $("#tblChecklist input[type='checkbox']").each(function ()
        {
            if ($(this).prop("checked")) {
                selectedChecklist += $(this).val() + ",";
            }
        });
        selectedChecklist = selectedChecklist.substring(0, selectedChecklist.length - 1);
        //selectedChecklist.splice(-1, 1);

        //$("#divAddQueuesConfirm").data("kendoWindow").close();

        var request = {
            ReferralFormName: $("#ReferralFormName").val(),
            ReferralFormId: $("#ReferralFormId").val(),
            PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val(),
            SelectedChecklist: selectedChecklist
        };

        $.ajax({
            url: '@Url.Action("SubmitReferralForm", "Patients")',
            data: request,
            type: "POST",
            dataType: "json",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, XMLHttpRequest) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }
                if (data.success) {
                    $.notifyBar({ html: data.message, cssClass: "success", position: "top" });
                    reloadChecklistFun();
                }
                else
                {
                    $.notifyBar({ html: data.message, cssClass: "error", position: "top" });
                }
                $("#divPreviewChecklistDocuments").data("kendoWindow").close();
            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    }





    function submitReferralForm()
    {
        //  $("#divAddQueuesConfirm").kendoWindow({
        //      modal: true,
        //      width: 400,
        //      title: "Confirm",
        //      visible: false,
        //      resizable: false,
        //      draggable: false,
        //      close: function () {
        //      },
        //      actions: ["Close"]
        //  })
        //.data("kendoWindow")
        //.center()
        //.open();

        $("#divPreviewChecklistDocuments").kendoWindow({
            content: {
                url: "@Url.Action("PreviewChecklistDocuments", "Patients")",
                beforeSend: function () {
                    $("#loading-image").show();
                },
                data: {
                    PhysicianPortalPatientId: $("#PhysicianPortalPatientId").val(),
                    ReferralFormName: $("#ReferralFormName").val(),
                    ReferralFormId: $("#ReferralFormId").val()
                }
            },
            modal: true,
            width: "70%",
            height: "90%",
            maxWidth: 800,
            maxHeight: 800,
            minWidth: 300,
            minHeight: 300,
            title: "Patient Checklist Documents",
            visible: false,
            resizable: false,
            draggable: false,
            actions: ["Close"],
            open: function (e) {
                $("body").css("overflow", "hidden");
            },
            close: function (e) {
                $("body").css("overflow", "");
            },
            refresh: function () {
                //The following function resets the poosition of the kendo window on orientation change on tablets and mobiles
                $("#divPreviewChecklistDocuments").bind("orientationchange", function (event) {
                    var x = document.activeElement;
                    if (x != undefined && x != null) {
                        x.blur();
                    }
                    $("#divPreviewChecklistDocuments").data("kendoWindow").center();
                });
            }
        })
        .data("kendoWindow")
        .center()
        .open();
    }

    function cancelQueueConfirmation() {
        $("#divAddQueuesConfirm").data("kendoWindow").close();
    }

    function divUploadDocumentsClose() {
        $("#divUploadDocuments").data("kendoWindow").close();
    }
</script>

<div id="divAddQueuesConfirm" style="display: none;">
    <p>
        <span class="glyphicon glyphicon-exclamation-sign"></span>
        Do you really want to submit the Referral form with all documents to Pharmacy?
    </p>
    <div class="text-align-center" style="border-top: 1px solid #dddddd; padding-top: 10px;">
        <button id="btnAddDeletePatientQueue" class="btn btn-success" onclick="POSTReferralFormDATA();">Yes</button>
        <button class="btn btn-default" onclick="cancelQueueConfirmation();">Cancel</button>
    </div>
</div>

<div id="divPreviewChecklistDocuments"></div>
