@using Microsoft.AspNet.Identity
@using PhysicianPortal.Core.Repository
@using PhysicianPortal.Core.Data
@using PhysicianPortal.Core.Helpers;
@using System.Web.Mvc
@using Microsoft.Owin
@using Microsoft.AspNet.Identity.Owin
@using System.Security.Claims
@try
{
    if (Request.IsAuthenticated)
    {
        UnitOfWork _unitOfWork = new UnitOfWork();
        string user_email = User.Identity.Name;
        var _user = _unitOfWork.UserRepository.GetAsQuerable(t => t.Email == user_email).FirstOrDefault();
        string user_name = _user.FirstName;
        string userEmail = _user.Email;
        var url = Url.Action("Index", "Manage");

        string officeName = null;
        if (User.IsInRole("Physician") || User.IsInRole("Technician") || User.IsInRole("Admin"))
        {
            //Check the office for which the user has logged in, the office is added to the user claims
            var claimType = "UserOffice";
            var currentUser = User.Identity;
            var userManager = Request.GetOwinContext().GetUserManager<ApplicationUserManager>();

            IList<string> userClaims = userManager.GetClaims(currentUser.GetUserId()).Select(x => x.Type).ToList();
            if (userClaims.Contains(claimType))
            {
                int userId = currentUser.GetUserId().ToInt0();
                UserClaim currentClaim = _unitOfWork.UserClaimRepository.GetSingle(x => x.ClaimName == claimType && x.UserId == userId);
                int officeId = currentClaim.ClaimValue.ToInt0();
                officeName = _unitOfWork.OfficeRepository.GetSingle(x => x.OfficeId == officeId).OfficeTitle;
            }
        }

        //Checking if the current session is a Super Admin impersonating some other user
        //If impersonating, the identity would have the 'IsImpersonating' claim

        var impersonatingClaimType = "IsImpersonating";
        var identity = (ClaimsIdentity)User.Identity;
        <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 padding0" style="text-align: center; margin-top: 10px;">
            @if (identity.HasClaim(c => c.Type == impersonatingClaimType))
            {
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 padding10" style="border: 5px solid #3eb0e4; text-align: center; margin-top: 10px;">
                    <div style="padding: 10px; display: inline; font-weight: bold; color: #337ab7">Impersonating User: @userEmail</div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" style="text-align: center; margin-top: 5px;">
                        <button onclick="endImpersonationSession(this);" class="btn btn-primary">End Session</button>
                    </div>
                </div>
            }
        </div>


                <div id="userName" class="text-primary col-lg-6 col-md-6 col-sm-6 col-xs-12" style="font-size:medium; margin-top:30px; text-align: right;">
                    @*@Html.AntiForgeryToken()*@
                    @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" }))
                    {
                        <span class="glyphicon glyphicon-user"></span>
                        <div style="display: inline">
                            <div style="display: inline-table; text-align: left">
                                @Html.Label("Welcome " + user_name)
                                @if (User.IsInRole("Physician") || User.IsInRole("Technician") || User.IsInRole("Admin"))
                                {
                                    <br />
                                    @Html.Label("Office: " + officeName)
                                }

                            </div>
                        </div>
                        <a href='@url'><img src="~/Content/images/settings.png" title="Manage account settings" onclick="" width=30 style="margin: 0px 5px 0px 20px;" /></a>
                        <img src="~/Content/images/logout.png" title="Logout" onclick="document.getElementById('logoutForm').submit()" width=30 style="margin: 0px 20px 0px 5px;" />
                    }
                </div>
    }
    else
    {
        @*<script type="text/javascript">
            $(document).ready(function () {
                window.location.href = '@Url.Action("Login", "Account")';
            });
        </script>*@
    }
}
catch (Exception exception)
{
    Logger.InsertLog("Exception thrown in Partial View _LoginPartial. " + exception.Message, exception);
}

<script>

    function endImpersonationSession(btn) {

        $.ajax({
            url: '@Url.Action("EndImpersonationSession", "Admin")',
            cache: false,
            type: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data) {

                if (data.success == true) {
                    window.location.href = '@Url.Content("~/Home/HomeDetail")';
                }
                else {
                    $.notifyBar({ html: "Failed to logout user", cssClass: 'error', position: 'top' });
                    console.log("An error occured: " + xhr.status + " " + xhr.statusText);
                }
            },
            error: function (xhr) {
                console.log("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    }
</script>
<style>
    #userName img:hover {
        cursor: pointer;
    }
</style>