
<div>

    @if (ViewBag.PhysicianConsent == 2)
    {
        <label>You do not have the Physician's consent to view their Patients</label>
        <br />
        <button onclick="showAskForConsentWindow('@Model.PhysicianId');" class="k-button k-button-icontext btn-primary" style="margin 10px 0 10px 0;">
            Ask for Consent
        </button>
    }
    else if (ViewBag.PhysicianConsent == 3)
    {
        <label>Your request to view Patient Details has been sent but the Physician has not responded yet</label>
    }
    else if (ViewBag.PhysicianConsent == 1)
    {
        <label>You have the Physician's consent to view their Patients</label>
    }
</div>


<div id="consentWindow" style="display: none;">
    @Html.Hidden("consentPhysicianId", null, new { id = "consentPhysicianId" })

    <div>
        <div style="width: 100%; text-align: center; margin: 20px 0 20px 0;">
            <p>Please enter the Email of the Physician to ask for consent to view Patient Details</p>
        </div>
        <div style="width: 100%; text-align: center; margin: 0 0 20px 0;">
            <input id="physicianEmailText" name="physicianEmailText" type="text" value="" placeholder="Physician Email" style="width: 200px;">
        </div>
        <div style="width: 100%; text-align: center;">
            <button onclick='submitPhysicianConsentRequest($("#consentPhysicianId").val(), $("#consentSalesTeamId").val());' class='k-button k-button-icontext btn-primary' style="width: 80px;">Submit</button>
        </div>
    </div>
</div>

@(Html.Kendo().Grid<SalesTeam.Web.Models.PhysicianConsentModel>()
    .Name("gridPhysicianConsent")
    .Columns(columns =>
    {
        columns.Bound(c => c.SalesTeamName).Title("Sales Representative");
        columns.Bound(c => c.ConsentGrantedString).Title("Consent Status");
        columns.Bound(c => c.ConsentRequestedOn).Title("Requested On");
        columns.Bound(c => c.ConsentChangedOn).Title("Granted/Denied On");
        columns.Bound(c => c.PhysicianEmail).Title("Requested To");
    })
    .Selectable()
    .Sortable()
    //.Filterable()
    .Filterable(ftb => ftb.Mode(GridFilterMode.Row).Extra(true).Operators(o => o.ForString(s => s.Clear().Contains("Contains"))))
    .Pageable(pageable => pageable
        .Refresh(true))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Read(read => read.Action("getPhysicianConsentRecords", "ViewPatientDetails", Model))
        //.Sort(sort => sort.Add("NoteDate").Descending())
        .PageSize(10)
    )
    //.Events(e => e.Change("onPharmacyNotesChange"))
    .NoRecords(n => n.Template("No records to display"))
)

<script>

    function showAskForConsentWindow(physicianId) {

        $("#consentPhysicianId").val(physicianId);

        $("#consentWindow").kendoWindow({
            modal: true,
            width: "40%",
            height: "30%",
            maxWidth: 800,
            maxHeight: 600,
            minWidth: 300,
            minHeight: 300,
            title: "Ask Physician to view Patient Details",
            visible: false,
            resizable: false,
            draggable: false,
            actions: ["Close"],
            open: function (e) {
                $("body").css("overflow", "hidden");
                $("#consentWindow").show();
            },
            close: function (e) {
                //$("#gridPharmacyNotes").data("kendoGrid").clearSelection();
                $("body").css("overflow", "");
                $("#consentWindow").hide();
            }
        }).data("kendoWindow").center().open();
    }

    function submitPhysicianConsentRequest(physicianId) {

        if ($("#physicianEmailText").val() == '' || $("#physicianEmailText").val() == undefined || isEmail($("#physicianEmailText").val()) == false) {
            alert('Please enter a valid email address');
            return;
        }

        $.ajax({
            url: '@Url.Action("SendPhysicianConsentRequest", "SalesTeamPhysician")',
            data: {
                physicianId: physicianId,
                physicianEmail: $("#physicianEmailText").val()
            },
            cache: false,
            type: "POST",
            beforeSend: function () {
                $("#loading-image").show();
            },
            success: function (data, textStatus, XMLHttpRequest) {
                if (data.hasOwnProperty("d")) {
                    data = data.d;
                }

                if (data.success == true) {
                    $("#gridPhysicianConsent").data("kendoGrid").dataSource.read();
                    $("#consentWindow").data("kendoWindow").close();
                }
                else {
                    alert("Could not complete the operation: " + data.message)
                }
            },
            error: function (xhr) {
                alert("An error occured: " + xhr.status + " " + xhr.statusText);
            }
        });
    }

    function isEmail(email) {
        var regex = new RegExp("^([a-zA-Z0-9_.+-])+\@@(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$");
        return regex.test(email);
    }

</script>